#!/usr/bin/env python3
#
# lesl - Listen Evaluate Say Loop
from subprocess import Popen
from tempfile import NamedTemporaryFile

import speech_recognition
from gtts import gTTS


# supported lanaguages: https://github.com/pndurette/gTTS#supported-languages
DEFAULT_LANGUAGE = "en-au"


def say(*msg, lang=DEFAULT_LANGUAGE):
  """
  Say a message out loud.

  Arugments:
      *msg (str[]): Message to say.
      lang (str): ISO 639-1 language code.

  Raises:
      Exception: If language not supported.
  """
  # TODO: Asynchronous queue of mp3s to play
  print("say:", *msg)
  tts = gTTS(text=" ".join(str(x) for x in msg), lang=lang)
  with NamedTemporaryFile(prefix="omnifocus", suffix=".mp3") as tmpfile:
    tts.save(tmpfile.name)
    process = Popen(['afplay', tmpfile.name])
    _, _ = process.communicate()


recognizer = speech_recognition.Recognizer()


def listen():
  with speech_recognition.Microphone() as source:
    recognizer.adjust_for_ambient_noise(source)
    audio = recognizer.listen(source)

  try:
    return recognizer.recognize_sphinx(audio)
  # or: return recognizer.recognize_google(audio)
  except speech_recognition.UnknownValueError:
    print("Could not understand audio")
  except speech_recognition.RequestError as e:
    print("Recog Error; {0}".format(e))

  return ""


say("Say something!")
say("I heard you say " + listen())
